name: finetune_RealESRNetx4plus
model_type: RealESRNetModel
scale: 4
num_gpu: auto
manual_seed: 0

# USM the ground-truth
l1_gt_usm: True
percep_gt_usm: True
gan_gt_usm: False

datasets:
  test_0: # the 1st test dataset
    name: Dacon
    type: PairedImageDataset
    dataroot_gt: /data/scpark/sr/test/hr
    dataroot_lq: /data/scpark/sr/test/lr
    io_backend:
      type: disk

#  test_1:  # the 1st test dataset
#    name: Set5
#    type: PairedImageDataset
#    dataroot_gt: ./datasets/Set5/GTmod4
#    dataroot_lq: ./datasets/Set5/LRbicx4
#    io_backend:
#      type: disk

  # test_2:  # the 2nd test dataset
  #   name: Set14
  #   type: PairedImageDataset
  #   dataroot_gt: ./datasets/Set14/GTmod4
  #   dataroot_lq: ./datasets/Set14/LRbicx4
  #   io_backend:
  #     type: disk

  # test_3:
  #   name: Urban100
  #   type: PairedImageDataset
  #   dataroot_gt: ./datasets/urban100/GTmod4
  #   dataroot_lq: ./datasets/urban100/LRbicx4
  #   io_backend:
  #     type: disk

  # test_4:
  #    name: BSDS100
  #    type: PairedImageDataset
  #    dataroot_gt: ./datasets/BSDS100/GTmod4
  #    dataroot_lq: ./datasets/BSDS100/LRbicx4
  #    io_backend:
  #      type: disk

  # test_5:
  #     name: Manga109
  #     type: PairedImageDataset
  #     dataroot_gt: ./datasets/manga109/GTmod4
  #     dataroot_lq: ./datasets/manga109/LRbicx4
  #     io_backend:
  #       type: disk

# network structures
network_g:
  type: RRDBNetRot
  num_in_ch: 3
  num_out_ch: 3
  num_feat: 64
  num_block: 23
  num_grow_ch: 32

network_d:
  type: UNetDiscriminatorSN
  num_in_ch: 3
  num_feat: 64
  skip_connection: True

# path
path:
  # use the pre-trained Real-ESRNet model
  pretrain_network_g: tags/net_g_905000.pth
  param_key_g: params_ema
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [400000]
    gamma: 0.5

  total_iter: 400000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean
    
# validation settings
val:
  save_img: true
  suffix: ~  # add suffix to saved images, if None, use exp name

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 4
      test_y_channel: true
    ssim:
      type: calculate_ssim
      crop_border: 4
      test_y_channel: true

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
